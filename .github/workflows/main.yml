name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Install Composer Dependencies
        run: composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

      - name: Install NPM Dependencies
        run: npm ci

      - name: Build Frontend Assets
        run: npm run build
        env:
          VITE_APP_URL: ${{ secrets.APP_URL }}

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script: |
            set -e
            cd ${{ secrets.VPS_DEPLOY_PATH }}
            
            # Pull latest changes
            git pull origin main
            
            # Install/Update Composer dependencies
            composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader
            
            # Install/Update NPM dependencies
            npm ci
            
            # Build frontend assets
            npm run build
            
            # Laravel specific commands
            php artisan down --message="Deploying new version..."
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            
            # Clear and cache
            php artisan cache:clear
            php artisan config:clear
            php artisan view:clear
            
            # Set proper permissions
            chmod -R 775 storage bootstrap/cache
            chown -R www-data:www-data storage bootstrap/cache
            
            # Bring application back up
            php artisan up
            
            # Reload or restart PM2
            if pm2 list | grep -q "my-app"; then
              pm2 reload my-app
            else
              pm2 start npm --name "my-app" -- run start
            fi
            
            # Verify deployment
            if [ $? -eq 0 ]; then
              echo "Deployment completed successfully"
            else
              echo "Deployment failed"
              php artisan up
              exit 1
            fi 